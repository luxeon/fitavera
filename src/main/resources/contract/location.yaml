openapi: 3.0.0
info:
  title: Location API
  version: 1.0.0
paths:
  /tenants/{tenantId}/locations:
    get:
      summary: Get a paginated list of locations by tenant
      operationId: getAllByTenant
      tags:
        - location
      parameters:
        - name: tenantId
          in: path
          required: true
          description: ID of the tenant to retrieve locations for
          schema:
            type: integer
            format: int64
        - $ref: 'pagination.yaml#/components/parameters/PageParam'
        - $ref: 'pagination.yaml#/components/parameters/SizeParam'
      responses:
        '200':
          description: A paginated list of locations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationPageResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

    post:
      summary: Create a new location
      operationId: create
      tags:
        - location
      parameters:
        - name: tenantId
          in: path
          required: true
          description: ID of the tenant to retrieve locations for
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLocationRequest'
      responses:
        '201':
          description: Location created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationDetailResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

  /tenants/{tenantId}/locations/{id}:
    get:
      summary: Get a location by ID
      operationId: getOne
      tags:
        - location
      parameters:
        - name: tenantId
          in: path
          required: true
          description: ID of the tenant to retrieve locations for
          schema:
            type: integer
            format: int64
        - name: id
          in: path
          required: true
          description: ID of the location to retrieve
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Location found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationDetailResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

    put:
      summary: Update an existing location
      operationId: update
      tags:
        - location
      parameters:
        - name: tenantId
          in: path
          required: true
          description: ID of the tenant to retrieve locations for
          schema:
            type: integer
            format: int64
        - name: id
          in: path
          required: true
          description: ID of the location to update
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLocationRequest'
      responses:
        '200':
          description: Location updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationDetailResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

    delete:
      summary: Delete a location by ID
      operationId: delete
      tags:
        - location
      parameters:
        - name: tenantId
          in: path
          required: true
          description: ID of the tenant to retrieve locations for
          schema:
            type: integer
            format: int64
        - name: id
          in: path
          required: true
          description: ID of the location to delete
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Location deleted successfully
        default:
          $ref: '#/components/responses/ErrorResponse'

components:
  schemas:
    CreateLocationRequest:
      type: object
      properties:
        tenantId:
          type: integer
          format: int64
        name:
          type: string
          maxLength: 255
          example: "Location Name"
        address:
          type: string
          maxLength: 255
          example: "123 Main St"
        city:
          type: string
          maxLength: 100
          example: "City Name"
        state:
          type: string
          maxLength: 100
          example: "State Name"
        postalCode:
          type: string
          maxLength: 20
          example: "12345"
        country:
          type: string
          maxLength: 50
          example: "Country Name"
      required:
        - tenantId
        - name

    UpdateLocationRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
          example: "Updated Location Name"
        address:
          type: string
          maxLength: 255
          example: "Updated Address"
        city:
          type: string
          maxLength: 100
          example: "Updated City"
        state:
          type: string
          maxLength: 100
          example: "Updated State"
        postalCode:
          type: string
          maxLength: 20
          example: "67890"
        country:
          type: string
          maxLength: 50
          example: "Updated Country"
      required:
        - name

    LocationDetailResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        tenantId:
          type: integer
          format: int64
        name:
          type: string
          maxLength: 255
        address:
          type: string
          maxLength: 255
        city:
          type: string
          maxLength: 100
        state:
          type: string
          maxLength: 100
        postalCode:
          type: string
          maxLength: 20
        country:
          type: string
          maxLength: 50
        created_at:
          type: string
          format: date-time
          example: "2024-10-15T12:00:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2024-10-15T12:00:00Z"
      required:
        - id
        - tenantId
        - name
        - created_at
        - updated_at

    LocationPageResponse:
      allOf:
        - $ref: 'pagination.yaml#/components/schemas/Page'
        - type: object
          properties:
            content:
              type: array
              items:
                $ref: '#/components/schemas/LocationItemResponse'

    LocationItemResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        tenantId:
          type: integer
          format: int64
        name:
          type: string
          maxLength: 255
      required:
        - id
        - tenantId
        - name

  responses:
    ErrorResponse:
      description: Default error response
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "An error occurred"
              details:
                type: string
                example: "Detailed error information"
