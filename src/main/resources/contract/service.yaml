openapi: 3.0.0
info:
  title: Service API
  version: 1.0.0
paths:
  /tenants/{tenantId}/services:
    get:
      summary: Get a paginated list of services for a tenant
      operationId: getAll
      tags:
        - service
      parameters:
        - name: tenantId
          in: path
          required: true
          description: ID of the tenant
          schema:
            type: integer
            format: int64
        - $ref: 'pagination.yaml#/components/parameters/PageParam'
        - $ref: 'pagination.yaml#/components/parameters/SizeParam'
      responses:
        '200':
          description: A paginated list of services
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicePageResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
    post:
      summary: Create a new service for a tenant
      operationId: create
      tags:
        - service
      parameters:
        - name: tenantId
          in: path
          required: true
          description: ID of the tenant
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateServiceRequest'
      responses:
        '201':
          description: Service created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDetailResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

  /tenants/{tenantId}/services/{id}:
    get:
      summary: Get a service by ID for a tenant
      operationId: getOne
      tags:
        - service
      parameters:
        - name: tenantId
          in: path
          required: true
          description: ID of the tenant
          schema:
            type: integer
            format: int64
        - name: id
          in: path
          required: true
          description: ID of the service to retrieve
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Service found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDetailResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

    put:
      summary: Update an existing service for a tenant
      operationId: update
      tags:
        - service
      parameters:
        - name: tenantId
          in: path
          required: true
          description: ID of the tenant
          schema:
            type: integer
            format: int64
        - name: id
          in: path
          required: true
          description: ID of the service to update
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateServiceRequest'
      responses:
        '200':
          description: Service updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDetailResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

    delete:
      summary: Delete a service by ID for a tenant
      operationId: delete
      tags:
        - service
      parameters:
        - name: tenantId
          in: path
          required: true
          description: ID of the tenant
          schema:
            type: integer
            format: int64
        - name: id
          in: path
          required: true
          description: ID of the service to delete
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Service deleted successfully
        default:
          $ref: '#/components/responses/ErrorResponse'

components:
  schemas:
    CreateServiceRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
          example: "Yoga Class"
        description:
          type: string
          example: "A detailed description of the yoga class"
        durationMinutes:
          type: integer
          example: 60
        capacity:
          type: integer
          example: 15
      required:
        - name

    UpdateServiceRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
          example: "Updated Service Name"
        description:
          type: string
          example: "Updated description"
        durationMinutes:
          type: integer
          example: 90
        capacity:
          type: integer
          example: 20
      required:
        - name

    ServiceDetailResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        tenantId:
          type: integer
          format: int64
        name:
          type: string
          maxLength: 255
        description:
          type: string
        durationMinutes:
          type: integer
        capacity:
          type: integer
        createdAt:
          type: string
          format: date-time
          example: "2024-10-16T12:00:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2024-10-16T12:00:00Z"
      required:
        - id
        - tenantId
        - name
        - createdAt
        - updatedAt

    ServicePageResponse:
      type: object
      allOf:
        - $ref: 'pagination.yaml#/components/schemas/Page'
        - type: object
          properties:
            content:
              type: array
              items:
                $ref: '#/components/schemas/ServiceItemResponse'

    ServiceItemResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        tenantId:
          type: integer
          format: int64
        name:
          type: string
          maxLength: 255
      required:
        - id
        - tenantId
        - name

  responses:
    ErrorResponse:
      description: Default error response
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "An error occurred"
              details:
                type: string
                example: "Detailed error information"
