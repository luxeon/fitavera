{
    "openapi": "3.1.0",
    "info": {
        "title": "OpenAPI definition",
        "version": "v0"
    },
    "servers": [
        {
            "url": "http://localhost:8080",
            "description": "Generated server url"
        }
    ],
    "tags": [
        {
            "name": "client",
            "description": "Client management endpoints"
        },
        {
            "name": "auth",
            "description": "Authentication endpoints"
        }
    ],
    "paths": {
        "/api/tenants/{id}": {
            "get": {
                "tags": [
                    "tenant"
                ],
                "summary": "Get a tenant by ID",
                "operationId": "getOne",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the tenant to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Tenant found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/TenantDetailsResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "tenant"
                ],
                "summary": "Update tenant name",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the tenant to update",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTenantRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Tenant updated successfully",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/TenantDetailsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tenants": {
            "post": {
                "tags": [
                    "tenant"
                ],
                "summary": "Create a new tenant",
                "operationId": "create",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateTenantRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Tenant created successfully",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/TenantDetailsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tenants/{tenantId}/clients": {
            "post": {
                "tags": [
                    "client"
                ],
                "summary": "Create a new client account",
                "operationId": "createClient",
                "parameters": [
                    {
                        "name": "tenantId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ClientSignupRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "409": {
                        "description": "User with this email already exists",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Client account created",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ClientDetailsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/signup": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Create a new admin account",
                "operationId": "signup",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserSignupRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "409": {
                        "description": "User with this email already exists",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Admin account created",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserDetailsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Authenticate user",
                "operationId": "login",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AuthRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Successfully authenticated",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/confirm-email": {
            "get": {
                "tags": [
                    "auth"
                ],
                "summary": "Confirm email address",
                "operationId": "confirmEmail",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid or expired token",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Email confirmed successfully"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ErrorResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        }
                    }
                }
            },
            "ValidationError": {
                "type": "object",
                "properties": {
                    "field": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "UpdateTenantRequest": {
                "type": "object",
                "description": "Request to update tenant name",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "New tenant name",
                        "example": "Fitness Club",
                        "maxLength": 255,
                        "minLength": 1
                    }
                },
                "required": [
                    "name"
                ]
            },
            "TenantDetailsResponse": {
                "type": "object",
                "description": "Detailed tenant information",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Tenant ID"
                    },
                    "name": {
                        "type": "string",
                        "description": "Tenant name"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Creation timestamp",
                        "example": "2024-10-15T12:00:00Z"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Last update timestamp",
                        "example": "2024-10-15T12:00:00Z"
                    }
                }
            },
            "CreateTenantRequest": {
                "type": "object",
                "description": "Request to create a new tenant with admin user",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Tenant name",
                        "example": "Fitness Club",
                        "maxLength": 255,
                        "minLength": 1
                    }
                },
                "required": [
                    "name"
                ]
            },
            "ClientSignupRequest": {
                "type": "object",
                "description": "User signup request",
                "properties": {
                    "firstName": {
                        "type": "string",
                        "description": "User's first name",
                        "example": "John",
                        "maxLength": 255,
                        "minLength": 2
                    },
                    "lastName": {
                        "type": "string",
                        "description": "User's last name",
                        "example": "Doe",
                        "maxLength": 255,
                        "minLength": 2
                    },
                    "email": {
                        "type": "string",
                        "description": "User's email",
                        "example": "john.doe@example.com"
                    },
                    "phoneNumber": {
                        "type": "string",
                        "description": "User's phone number in E.164 format",
                        "example": "+1234567890",
                        "pattern": "^\\+?[1-9]\\d{1,14}$"
                    }
                },
                "required": [
                    "email",
                    "firstName",
                    "lastName"
                ]
            },
            "ClientDetailsResponse": {
                "type": "object",
                "description": "User details response",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "User ID"
                    },
                    "firstName": {
                        "type": "string",
                        "description": "User's first name"
                    },
                    "lastName": {
                        "type": "string",
                        "description": "User's last name"
                    },
                    "email": {
                        "type": "string",
                        "description": "User's email"
                    },
                    "phoneNumber": {
                        "type": "string",
                        "description": "User's phone number"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Creation timestamp",
                        "example": "2024-03-15T12:00:00Z"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Last update timestamp",
                        "example": "2024-03-15T12:00:00Z"
                    }
                }
            },
            "UserSignupRequest": {
                "type": "object",
                "description": "User signup request",
                "properties": {
                    "firstName": {
                        "type": "string",
                        "description": "User's first name",
                        "example": "John",
                        "maxLength": 255,
                        "minLength": 2
                    },
                    "lastName": {
                        "type": "string",
                        "description": "User's last name",
                        "example": "Doe",
                        "maxLength": 255,
                        "minLength": 2
                    },
                    "email": {
                        "type": "string",
                        "description": "User's email",
                        "example": "john.doe@example.com"
                    },
                    "phoneNumber": {
                        "type": "string",
                        "description": "User's phone number in E.164 format",
                        "example": "+1234567890",
                        "pattern": "^\\+?[1-9]\\d{1,14}$"
                    },
                    "password": {
                        "type": "string",
                        "description": "User's password",
                        "example": "StrongP@ss123",
                        "pattern": "^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+=])(?=\\S+$).{8,}$"
                    }
                },
                "required": [
                    "email",
                    "firstName",
                    "lastName",
                    "password"
                ]
            },
            "UserDetailsResponse": {
                "type": "object",
                "description": "Admin details response",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Admin ID"
                    },
                    "firstName": {
                        "type": "string",
                        "description": "Admin's first name"
                    },
                    "lastName": {
                        "type": "string",
                        "description": "Admin's last name"
                    },
                    "email": {
                        "type": "string",
                        "description": "Admin's email"
                    },
                    "phoneNumber": {
                        "type": "string",
                        "description": "Admin's phone number"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Creation timestamp",
                        "example": "2024-03-15T12:00:00Z"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Last update timestamp",
                        "example": "2024-03-15T12:00:00Z"
                    }
                }
            },
            "AuthRequest": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                },
                "required": [
                    "email",
                    "password"
                ]
            },
            "AuthResponse": {
                "type": "object",
                "properties": {
                    "accessToken": {
                        "type": "string"
                    }
                }
            }
        }
    }
}